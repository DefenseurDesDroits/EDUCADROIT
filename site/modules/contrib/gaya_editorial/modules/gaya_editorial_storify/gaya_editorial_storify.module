<?php

/**
 * @file
 * Contains gaya_editorial_storify.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @author Sébastien Libbrecht <slibbrecht@gaya.fr>
 */
function gaya_editorial_storify_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gaya_editorial_storify module.
    case 'help.page.gaya_editorial_storify':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Gaya Editorial Storify') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess
 *
 * Add variables in twig
 *
 * - entity_id: The entity ID of the object
 * - entity_bundle: The bundle of the object
 * - name: The backoffice title
 * - field_ge_title: The title can be showed
 * - field_ge_storify_border: If the widget has a border
 * - field_ge_storify_header: If the widget has a header
 * - field_ge_storify_width: The width of the widget (in px). Is is null 100%.
 * - field_ge_storify_height: The height of the widget (in px)
 * - field_ge_storify_template: The template of the widget. (story, grid, slideshow)
 * - field_ge_storify_url: The url of the storify
 *
 * @author Sébastien Libbrecht <slibbrecht@gaya.fr>
 * @param $variables
 * @param $hook
 */
function gaya_editorial_storify_preprocess(&$variables, $hook) {
  if ($hook == 'gaya_editorial_entity') {
    if ($variables['elements']['#gaya_editorial_entity']->bundle() == 'gaya_editorial_storify') {
      $entity = $variables['elements']['#gaya_editorial_entity'];
      $variables['entity_id'] = $entity->id();
      $variables['entity_bundle'] = $entity->bundle();
      $variables['name'] = $entity->getName();
      $variables['field_ge_title'] = $entity->get('field_ge_title')->getValue();
      $variables['field_ge_storify_border'] = $entity->get('field_ge_storify_border')->getValue();
      $variables['field_ge_storify_header'] = $entity->get('field_ge_storify_header')->getValue();
      $variables['field_ge_storify_height'] = $entity->get('field_ge_storify_height')->getValue();
      $variables['field_ge_storify_template'] = $entity->get('field_ge_storify_template')->getValue();
      $variables['field_ge_storify_url'] = $entity->get('field_ge_storify_url')->getValue();
      $variables['field_ge_storify_width'] = $entity->get('field_ge_storify_width')->getValue();
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * @author Sébastien Libbrecht <slibbrecht@gaya.fr>
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function gaya_editorial_storify_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'gaya_editorial_entity') {
    if ($variables['elements']['#gaya_editorial_entity']->bundle() == 'gaya_editorial_storify') {
      $suggestions[] = 'gaya_editorial_storify';
      $suggestions[] = 'gaya_editorial_storify__' . $variables['elements']['#gaya_editorial_entity']->id();
    }
  }
}

/**
 * Implements hook_theme
 *
 * --
 * @author Sébastien Libbrecht <slibbrecht@gaya.fr>
 */
function gaya_editorial_storify_theme() {
  $theme = [];
  $theme['gaya_editorial_storify'] = [
    'variables' => array(
      'entity_id' => '',
      'entity_bundle' => '',
      'name' => '',
      'field_ge_title' => '',
      'field_ge_storify_border' => '',
      'field_ge_storify_header' => '',
      'field_ge_storify_height' => '',
      'field_ge_storify_template' => '',
      'field_ge_storify_url' => '',
      'field_ge_storify_width' => '',
    ),
    'template' => 'gaya_editorial_storify',
  ];
  return $theme;
}